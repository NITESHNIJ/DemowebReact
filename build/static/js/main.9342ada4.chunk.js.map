{"version":3,"sources":["components/DishdetailComponent.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutusComponent.js","components/MainComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","shared/dishes.js","redux/dishes.js","shared/promotions.js","redux/promotions.js","shared/comments.js","redux/comments.js","shared/leaders.js","redux/leaders.js","App.js","redux/configureStore.js","serviceWorker.js","index.js","logo.svg"],"names":["required","val","length","maxLength","len","CommentForm","props","state","isModalOpen","toggleModal","bind","this","setState","values","console","log","JSON","stringify","addComment","dishId","firstname","yourname","email","Fragment","className","navbar","outline","onClick","isOpen","toggle","onSubmit","handleSubmit","htmlFor","md","select","model","id","name","value","text","placeholder","validators","minLength","show","messages","textarea","rows","size","offset","type","color","Component","RenderComments","comments","comments_list","map","single_comment","d","Date","date","comment","author","getMonth","getDate","getFullYear","Dishdetail","dish","class","to","active","top","src","image","alt","description","RenderMenuItem","width","Menu","menu","dishes","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","dark","expand","href","height","innerRef","input","check","Footer","RenderCard","item","designation","Home","promotion","leader","isNumber","isNaN","Number","validEmail","test","Contact","role","RenderLeader","key","tag","left","middle","object","body","heading","About","leaders","title","list","Main","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","withRouter","connect","dispatch","rating","payload","DISHES","category","label","price","Dishes","action","PROMOTIONS","Promotions","COMMENTS","Comments","toISOString","concat","LEADERS","abbr","Leaders","store","createStore","combineReducers","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9342ada4.chunk.js","sourcesContent":["\r\n\r\nimport React, { Component } from 'react';\r\nimport { Media } from 'reactstrap';\r\n\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n        Button, Modal, ModalHeader, ModalBody,\r\n        Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors, controls } from 'react-redux-form';\r\nimport { Col, FormFeedback, Row } from 'reactstrap';\r\n\r\n/*\r\n//WEEK 2.3\r\nfunction RenderComments({comments}){\r\n    if(comments!=null){\r\n        const comments_list = comments.map((single_comment) => {\r\n            var d = new Date(single_comment.date);\r\n            var monthNames = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\r\n            return (\r\n                <ul className = \"list-unstyled\">\r\n                    <li>{single_comment.comment}</li>\r\n                    <br />\r\n                    <li>--{single_comment.author}, {monthNames[d.getMonth()]} {d.getDate()}, {d.getFullYear()}</li>\r\n                </ul>\r\n            );\r\n        });\r\n        return (\r\n            comments_list\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction Dishdetail(props){\r\n    if(props.dish!=null){\r\n        return(\r\n            <div class=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/menu\">Menu</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div  className=\"col-12 col-md-5 m-1\">\r\n                        <Card>\r\n                            <CardImg top src={props.dish.image} alt={props.dish.name} />\r\n                            <CardBody>\r\n                            <CardTitle>{props.dish.name}</CardTitle>\r\n                            <CardText>{props.dish.description}</CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div  className=\"col-12 col-md-5 m-1\">\r\n                        <div>\r\n                            <h4>Comments</h4>\r\n                            <RenderComments comments={props.comments} />\r\n                            <button>Submit Comments</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div></div>\r\n        );\r\n    }    \r\n}\r\n*/\r\n\r\n/*\r\n//WEEK 3.3 assignment changes\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <React.Fragment>\r\n            <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n                </NavItem>\r\n            </Nav>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row><Label htmlFor=\"firstname\" md={6}>Rating</Label> </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={10}>\r\n                                    <Control.select model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        className=\"form-control\">\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row><Label htmlFor=\"yourname\" md={6}>Your Name</Label></Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".yourname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row><Label htmlFor=\"email\" md={6}>Comment</Label></Row>\r\n                            <Row className=\"form-group\">\r\n                                \r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".email\" id=\"email\" name=\"email\" rows=\"12\"\r\n                                        className=\"form-control\"/>\r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 0}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n            </Modal>\r\n        </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments({comments}){\r\n    if(comments!=null){\r\n        const comments_list = comments.map((single_comment) => {\r\n            var d = new Date(single_comment.date);\r\n            var monthNames = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\r\n            return (\r\n                <ul className = \"list-unstyled\">\r\n                    <li>{single_comment.comment}</li>\r\n                    <br />\r\n                    <li>--{single_comment.author}, {monthNames[d.getMonth()]} {d.getDate()}, {d.getFullYear()}</li>\r\n                </ul>\r\n            );\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n            {comments_list}\r\n            <CommentForm />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction Dishdetail(props) {\r\n        if(props.dish!=null){\r\n            return(\r\n                <div class=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/menu\">Menu</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div  className=\"col-12 col-md-5 m-1\">\r\n                            <Card>\r\n                                <CardImg top src={props.dish.image} alt={props.dish.name} />\r\n                                <CardBody>\r\n                                <CardTitle>{props.dish.name}</CardTitle>\r\n                                <CardText>{props.dish.description}</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                        <div  className=\"col-12 col-md-5 m-1\">\r\n                            <div>\r\n                                <h4>Comments</h4>\r\n                                <RenderComments comments={props.comments} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }    \r\n    }\r\n*/\r\n\r\n\r\n//WEEK 4.2\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.addComment(this.props.dishId,values.firstname,values.yourname,values.email);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <React.Fragment>\r\n            <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n                </NavItem>\r\n            </Nav>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row><Label htmlFor=\"firstname\" md={6}>Rating</Label> </Row>\r\n                        <Row className=\"form-group\">\r\n                                <Col md={10}>\r\n                                    <Control.select model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        className=\"form-control\">\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                        <option value=\"4\">4</option>\r\n                                        <option value=\"5\">5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row><Label htmlFor=\"yourname\" md={6}>Your Name</Label></Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".yourname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row><Label htmlFor=\"email\" md={6}>Comment</Label></Row>\r\n                            <Row className=\"form-group\">\r\n                                \r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".email\" id=\"email\" name=\"email\" rows=\"12\"\r\n                                        className=\"form-control\"/>\r\n                                    \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 0}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n            </Modal>\r\n        </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments({comments,addComment,dishId}){\r\n    if(comments!=null){\r\n        const comments_list = comments.map((single_comment) => {\r\n            var d = new Date(single_comment.date);\r\n            var monthNames = [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ];\r\n            return (\r\n                <ul className = \"list-unstyled\">\r\n                    <li>{single_comment.comment}</li>\r\n                    <br />\r\n                    <li>--{single_comment.author}, {monthNames[d.getMonth()]} {d.getDate()}, {d.getFullYear()}</li>\r\n                </ul>\r\n            );\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n            {comments_list}\r\n            <CommentForm dishId={dishId} addComment={addComment}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction Dishdetail(props) {\r\n        if(props.dish!=null){\r\n            return(\r\n                <div class=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/menu\">Menu</Link>\r\n                            </BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div  className=\"col-12 col-md-5 m-1\">\r\n                            <Card>\r\n                                <CardImg top src={props.dish.image} alt={props.dish.name} />\r\n                                <CardBody>\r\n                                <CardTitle>{props.dish.name}</CardTitle>\r\n                                <CardText>{props.dish.description}</CardText>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </div>\r\n                        <div  className=\"col-12 col-md-5 m-1\">\r\n                            <div>\r\n                                <h4>Comments</h4>\r\n                                <RenderComments comments={props.comments} \r\n                                addComment={props.addComment}\r\n                                dishId={props.dish.id}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }    \r\n    }\r\n\r\n\r\n\r\n\r\nexport default Dishdetail;","\r\n\r\nimport React, { Component } from 'react';\r\nimport { Media } from 'reactstrap';\r\nimport Dishdetail from './DishdetailComponent';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n//WEEK 2.3, implemented to enable the dishdetails component as well\r\nfunction RenderMenuItem({dish, onClick}) {\r\n    return(\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n              <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n              <CardImgOverlay>\r\n                  <CardTitle>{dish.name}</CardTitle>\r\n              </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.map((dish) => {\r\n        return (\r\n          <div  className=\"col-12 col-md-5 m-1\">\r\n            <RenderMenuItem  dish={dish}/>\r\n          </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                        <Link to=\"/home\">Home</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {menu}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\n//import { Navbar, NavbarBrand, Jumbotron } from 'reactstrap';\r\n\r\n//now here I import elements which I will require to construct navigation links in the header. The links \r\n//on being clicked will effect the url and will change it. and now this url will match one of the routes and hence that \r\n//component will start getting displayed.\r\n\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n  Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label } from 'reactstrap';\r\n\r\n\r\n//import { Nav, NavbarToggler, Collapse, NavItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n//WEEK 3.1\r\nclass Header extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false\r\n    };\r\n    this.toggleNav = this.toggleNav.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n  }\r\n\r\n  toggleNav(){\r\n    this.setState({\r\n      isNavOpen : !this.state.isNavOpen\r\n    });\r\n  }\r\n\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  handleLogin(event) {\r\n    this.toggleModal();\r\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n        + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <React.Fragment>\r\n      <Navbar dark expand=\"md\">\r\n        <div className=\"container\">\r\n          <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n              <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n            </NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/home\">\r\n                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                    <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/menu\">\r\n                    <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                    <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n        </div>\r\n      </Navbar>\r\n      <Jumbotron>\r\n           <div className=\"container\">\r\n               <div className=\"row row-header\">\r\n                   <div className=\"col-12 col-sm-6\">\r\n                       <h1>Ristorante con Fusion</h1>\r\n                       <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </Jumbotron>\r\n       <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n            <ModalBody>\r\n              <Form onSubmit={this.handleLogin}>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"username\">Username</Label>\r\n                  <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"password\">Password</Label>\r\n                  <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input}  />\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                  <Label check>\r\n                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                  </Label>\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n              </Form>\r\n            </ModalBody>\r\n       </Modal>\r\n    </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","///this file was made in the week 2.2, for the use in routers part.\r\n\r\nimport React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\nfunction RenderCard({item}){\r\n    return(\r\n        <Card>\r\n            <CardImg src={item.image} alt={item.name} />\r\n            <CardBody>\r\n                <CardTitle>{item.name}</CardTitle>\r\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>:null}\r\n                <CardText>{item.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Form, FormGroup, Label, Input, Col, FormFeedback, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors, controls } from 'react-redux-form';\r\n\r\n/*\r\n//WEEK 3.2, form also with validation\r\nclass Contact extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log('Current State is: ' + JSON.stringify(this.state));\r\n        alert('Current State is: ' + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n    validate(firstname, lastname, telnum, email) {\r\n\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n\r\n        if (this.state.touched.firstname && firstname.length < 3)\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        else if (this.state.touched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if (this.state.touched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if (this.state.touched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n            \r\n        if (this.state.touched.email && email.split('').filter(x => x === '@').length !== 1) \r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n    \r\n    \r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n          touched: { ...this.state.touched, [field]: true },\r\n        });\r\n    }\r\n\r\n\r\nrender() {\r\n\r\n    const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                        <Link to=\"/home\">Home</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        value={this.state.firstname}\r\n                                        valid={errors.firstname === ''}\r\n                                        invalid={errors.firstname !== ''}\r\n                                        onBlur={this.handleBlur('firstname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        value={this.state.lastname}\r\n                                        valid={errors.lastname === ''}\r\n                                        invalid={errors.lastname !== ''}\r\n                                        onBlur={this.handleBlur('lastname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        value={this.state.telnum}\r\n                                        valid={errors.telnum === ''}\r\n                                        invalid={errors.telnum !== ''}\r\n                                        onBlur={this.handleBlur('telnum')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        value={this.state.email}\r\n                                        valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onBlur={this.handleBlur('email')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\"\r\n                                                name=\"agree\"\r\n                                                checked={this.state.agree}\r\n                                                onChange={this.handleInputChange} /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Input type=\"select\" name=\"contactType\"\r\n                                            value={this.state.contactType}\r\n                                            onChange={this.handleInputChange}>\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        value={this.state.message}\r\n                                        onChange={this.handleInputChange}></Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\n*/\r\n/*\r\n//WEEK 3.3 - Making form with redux.\r\n\r\n//we remove the form feed back and all other functions and elements which we had for form validation.\r\n//FormGroup row were changed to Row.\r\n//Inputs type=\"text\" were changed to Control.text with a model name and className added as attribute and remove the attributes : value,valid,invalid\r\n//,onBlur,onChange attributes from all the  input fields\r\n//FormGroup check is changed to div className=\"form-check\"\r\n//Input type=\"check\" were changed to Control.checkbox, with a model and className attribute set.\r\n//Input type=\"select\" were changed to Control.select, with a model and className attribute set.\r\n//Input type=\"textarea\" were changed to Control.textarea, with a model and className attribute set.\r\nclass Contact extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n    }\r\n\r\n    \r\n\r\nrender() {\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                        <Link to=\"/home\">Home</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className = \"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\"\r\n                                                name=\"agree\"\r\n                                                className=\"form-check-input\"/> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" className=\"form-control\"\r\n                                        rows=\"12\"></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n               </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\n*/\r\n\r\n//WEEK 3.4 : redux form validation\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n    }\r\n\r\n    \r\n\r\nrender() {\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                        <Link to=\"/home\">Home</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n               </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\n\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction RenderLeader({leader}){\r\n        return (\r\n            <div key={leader.id} className=\"col-12 mt-5\">\r\n                <Media tag=\"li\">\r\n                  <Media left middle>\r\n                      <Media object src={leader.image} alt={leader.name} />\r\n                  </Media>\r\n                  <Media body className=\"ml-5\">\r\n                    <Media heading>{leader.name}</Media>\r\n                    <p>{leader.designation}</p>\r\n                    <p>{leader.description}</p>\r\n                  </Media>\r\n                </Media>\r\n            </div>\r\n        );\r\n}\r\n\r\n\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader} />\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders}\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React, { Component } from 'react';\r\nimport { Navbar,NavbarBrand } from 'reactstrap';\r\nimport Menu from './MenuComponent';\r\nimport Dishdetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutusComponent';\r\n\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {addComment} from '../redux/ActionCreators';\r\n/*\r\n//WEEK 3.3\r\n\r\n//this mainComponent now need to get its state from react-redux store , as it does not have any information by itself.\r\n//we can connect the component from the store as we have provided the 'Provider' tag in the App component to the main component.\r\n//and from the provider tag we have sent the state , but it cannot directly come into the props of the main component as as we did not put the state\r\n//in the main component tags, we put the state in a covering tag ie Provider tag.\r\n//hence for main component to recieve the state as the props, we need to externally do this, and we do it by using the function : mapStateToProps()\r\n//ie in this function we recieve the state value which contains the state of the redux store, and this state is then opened inside this function\r\n//and for making that value to go to the main component in form of props, at the bottom while exporting the main component we enclose the \r\n//Main in the conect function.\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    dishes : state.dishes,\r\n    comments : state.comments,\r\n    promotions : state.promotions,\r\n    leaders : state.leaders\r\n  }\r\n\r\n}\r\n\r\n//now inside the main component, whatever we have sent from the function 'mapStateToProps', we get in the component as props.\r\nclass Main extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home dish={this.props.dishes.filter((dish) => dish.featured)[0]} \r\n        promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\r\n        leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n        />\r\n      );\r\n    }\r\n\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <Dishdetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n        comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} />\r\n      );\r\n    }\r\n//we have stated 'exact path=\"/menu\"'  before 'path=\"/menu/:dishId\"' , which makes sure that if we have just /menu\r\n//in the url so the exact route runs and then it does not see the next option. and if we have the Id as well in the\r\n//URL ,then automatically the second one runs.\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n          <Switch>\r\n            <Route path=\"/home\" component={HomePage} />\r\n            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n            <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n            <Route exact path=\"/contactus\" component={Contact} />\r\n            <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n            <Redirect to=\"/home\" />\r\n          </Switch>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//we use the withrouter function ass we are using the router in the main component.\r\nexport default withRouter(connect(mapStateToProps)(Main));\r\n*/\r\n\r\n//WEEK 4.2\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    dishes : state.dishes,\r\n    comments : state.comments,\r\n    promotions : state.promotions,\r\n    leaders : state.leaders\r\n  }\r\n}\r\n\r\n//this function gets as input an inbuilt function named 'dispatch', this function is the dispatcher and it takes in an action as input and\r\n//sends it to the reducer, ie it passes the action into all the reducers.\r\n//the action which we are trying to create is made by the actionCreator 'addComment', and to make this action , we need to pass 4 values to the\r\n//'addComments' function. we will get the value when we submit the form, and the form is present in the dishDetail component, so we some how have\r\n//to send the function to that component.\r\n//so we make a property inside this object named as 'addComment' which holds a function, this held function is responsible to create the \r\n//action and send it to the dispatcher, which sends the action to the reducer.\r\n//we expect the addComment property function to recieve 4 value, and these very 4 values are needed to make the action.\r\n//now this property function is what we send to different components.\r\n//and this function 'mapDispatchToProps', whatever we make inside this function will be passed as a parameter in the props varaible for the \r\n//main component as we have mentioned so at the bottom while exporting the component.\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addComment : (dishId, author, rating, comment) => dispatch(addComment(dishId, author, rating, comment))\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  render(){\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home dish={this.props.dishes.filter((dish) => dish.featured)[0]} \r\n        promotion={this.props.promotions.filter((promo) => promo.featured)[0]}\r\n        leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n        />\r\n      );\r\n    }\r\n\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <Dishdetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n        comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} \r\n        addComment = {this.props.addComment}/>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n          <Switch>\r\n            <Route path=\"/home\" component={HomePage} />\r\n            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n            <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n            <Route exact path=\"/contactus\" component={Contact} />\r\n            <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n            <Redirect to=\"/home\" />\r\n          </Switch>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//we use the with router function as we are using the router in the main component.\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","\r\n//WEEK 4.1\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n//when we give the format of the arrow function as  fn-name => ({...}) , these paranthesis mean that the function will return every thing which \r\n//is stated inside the paranthesis, therefor here we are returning an object.\r\n\r\n//this function is an action creator, ie  this function is used to create an action, and we specifically make this function to create action which\r\n//is specifically used to alter the comments in the store.\r\n//ie now whenever we will need an action to alter the comments in the store, we will always use this function to create the action for it.\r\n\r\nexport const addComment = (dishId, rating, author, comment) => ({\r\n    type : ActionTypes.ADD_COMMENT,\r\n    payload : {\r\n        dishId:dishId,\r\n        rating:rating,\r\n        author:author,\r\n        comment:comment\r\n    }\r\n});\r\n","//WEEK 4.1\r\nexport const ADD_COMMENT = 'ADD_COMMENT';","\r\n   //WEEK2.2\r\n   //for the second week removed the commets part from this file and put it in a separate file.\r\n   export const DISHES =\r\n    [\r\n        {\r\n        id: 0,\r\n        name:'Uthappizza',\r\n        image: '/assets/images/uthappizza.png',\r\n        category: 'mains',\r\n        label:'Hot',\r\n        price:'4.99',\r\n        featured: true,\r\n        description:'A unique combination of Indian Uthappam (pancake) and Italian pizza, topped with Cerignola olives, ripe vine cherry tomatoes, Vidalia onion, Guntur chillies and Buffalo Paneer.'                    \r\n        },\r\n        {\r\n        id: 1,\r\n        name:'Zucchipakoda',\r\n        image: '/assets/images/zucchipakoda.png',\r\n        category: 'appetizer',\r\n        label:'',\r\n        price:'1.99',\r\n        featured: false,\r\n        description:'Deep fried Zucchini coated with mildly spiced Chickpea flour batter accompanied with a sweet-tangy tamarind sauce'\r\n        },\r\n        {\r\n        id: 2,\r\n        name:'Vadonut',\r\n        image: '/assets/images/vadonut.png',\r\n        category: 'appetizer',\r\n        label:'New',\r\n        price:'1.99',\r\n        featured: false,\r\n        description:'A quintessential ConFusion experience, is it a vada or is it a donut?'\r\n        },\r\n        {\r\n        id: 3,\r\n        name:'ElaiCheese Cake',\r\n        image: '/assets/images/elaicheesecake.png',\r\n        category: 'dessert',\r\n        label:'',\r\n        price:'2.99',\r\n        featured: false,\r\n        description:'A delectable, semi-sweet New York Style Cheese Cake, with Graham cracker crust and spiced with Indian cardamoms'\r\n        }\r\n    ];","//WEEK 4.1\r\nimport { DISHES } from '../shared/dishes';\r\n\r\nexport const Dishes = (state = DISHES, action) => {\r\n    switch(action.type){\r\n        default:\r\n            return state;\r\n    }\r\n}","export const PROMOTIONS = [\r\n    {\r\n      id: 0,\r\n      name: 'Weekend Grand Buffet',\r\n      image: '/assets/images/buffet.png',\r\n      label: 'New',\r\n      price: '19.99',\r\n      featured: true,\r\n      description: 'Featuring mouthwatering combinations with a choice of five different salads, six enticing appetizers, six main entrees and five choicest desserts. Free flowing bubbly and soft drinks. All for just $19.99 per person'\r\n    }\r\n  ];","import { PROMOTIONS } from '../shared/promotions';\r\n\r\nexport const Promotions = (state = PROMOTIONS, action) => {\r\n    switch(action.type){\r\n        default:\r\n            return state;\r\n    }\r\n}","//WEEK 2.2\r\nexport const COMMENTS = \r\n[\r\n    {\r\n        id: 0,\r\n        dishId: 0,\r\n        rating: 5,\r\n        comment: \"Imagine all the eatables, living in conFusion!\",\r\n        author: \"John Lemon\",\r\n        date: \"2012-10-16T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 1,\r\n        dishId: 0,\r\n        rating: 4,\r\n        comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n        author: \"Paul McVites\",\r\n        date: \"2014-09-05T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 2,\r\n        dishId: 0,\r\n        rating: 3,\r\n        comment: \"Eat it, just eat it!\",\r\n        author: \"Michael Jaikishan\",\r\n        date: \"2015-02-13T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 3,\r\n        dishId: 0,\r\n        rating: 4,\r\n        comment: \"Ultimate, Reaching for the stars!\",\r\n        author: \"Ringo Starry\",\r\n        date: \"2013-12-02T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 4,\r\n        dishId: 0,\r\n        rating: 2,\r\n        comment: \"It's your birthday, we're gonna party!\",\r\n        author: \"25 Cent\",\r\n        date: \"2011-12-02T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 5,\r\n        dishId: 1,\r\n        rating: 5,\r\n        comment: \"Imagine all the eatables, living in conFusion!\",\r\n        author: \"John Lemon\",\r\n        date: \"2012-10-16T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 6,\r\n        dishId: 1,\r\n        rating: 4,\r\n        comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n        author: \"Paul McVites\",\r\n        date: \"2014-09-05T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 7,\r\n        dishId: 1,\r\n        rating: 3,\r\n        comment: \"Eat it, just eat it!\",\r\n        author: \"Michael Jaikishan\",\r\n        date: \"2015-02-13T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 8,\r\n        dishId: 1,\r\n        rating: 4,\r\n        comment: \"Ultimate, Reaching for the stars!\",\r\n        author: \"Ringo Starry\",\r\n        date: \"2013-12-02T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 9,\r\n        dishId: 1,\r\n        rating: 2,\r\n        comment: \"It's your birthday, we're gonna party!\",\r\n        author: \"25 Cent\",\r\n        date: \"2011-12-02T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 10,\r\n        dishId: 2,\r\n        rating: 5,\r\n        comment: \"Imagine all the eatables, living in conFusion!\",\r\n        author: \"John Lemon\",\r\n        date: \"2012-10-16T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 11,\r\n        dishId: 2,\r\n        rating: 4,\r\n        comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n        author: \"Paul McVites\",\r\n        date: \"2014-09-05T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 12,\r\n        dishId: 2,\r\n        rating: 3,\r\n        comment: \"Eat it, just eat it!\",\r\n        author: \"Michael Jaikishan\",\r\n        date: \"2015-02-13T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 13,\r\n        dishId: 2,\r\n        rating: 4,\r\n        comment: \"Ultimate, Reaching for the stars!\",\r\n        author: \"Ringo Starry\",\r\n        date: \"2013-12-02T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 14,\r\n        dishId: 2,\r\n        rating: 2,\r\n        comment: \"It's your birthday, we're gonna party!\",\r\n        author: \"25 Cent\",\r\n        date: \"2011-12-02T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 15,\r\n        dishId: 3,\r\n        rating: 5,\r\n        comment: \"Imagine all the eatables, living in conFusion!\",\r\n        author: \"John Lemon\",\r\n        date: \"2012-10-16T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 16,\r\n        dishId: 3,\r\n        rating: 4,\r\n        comment: \"Sends anyone to heaven, I wish I could get my mother-in-law to eat it!\",\r\n        author: \"Paul McVites\",\r\n        date: \"2014-09-05T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 17,\r\n        dishId: 3,\r\n        rating: 3,\r\n        comment: \"Eat it, just eat it!\",\r\n        author: \"Michael Jaikishan\",\r\n        date: \"2015-02-13T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 18,\r\n        dishId: 3,\r\n        rating: 4,\r\n        comment: \"Ultimate, Reaching for the stars!\",\r\n        author: \"Ringo Starry\",\r\n        date: \"2013-12-02T17:57:28.556094Z\"\r\n    },\r\n    {\r\n        id: 19,\r\n        dishId: 3,\r\n        rating: 2,\r\n        comment: \"It's your birthday, we're gonna party!\",\r\n        author: \"25 Cent\",\r\n        date: \"2011-12-02T17:57:28.556094Z\"\r\n    }\r\n];","import { COMMENTS } from '../shared/comments';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = COMMENTS, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            comment.id = state.length;\r\n            comment.date = new Date().toISOString();\r\n            return state.concat(comment);\r\n        default:\r\n            return state;\r\n    }\r\n}","export const LEADERS = [\r\n    {\r\n      id: 0,\r\n      name: 'Peter Pan',\r\n      image: '/assets/images/alberto.png',\r\n      designation: 'Chief Epicurious Officer',\r\n      abbr: 'CEO',\r\n      featured: false,\r\n      description: \"Our CEO, Peter, credits his hardworking East Asian immigrant parents who undertook the arduous journey to the shores of America with the intention of giving their children the best future. His mother's wizardy in the kitchen whipping up the tastiest dishes with whatever is available inexpensively at the supermarket, was his first inspiration to create the fusion cuisines for which The Frying Pan became well known. He brings his zeal for fusion cuisines to this restaurant, pioneering cross-cultural culinary connections.\"\r\n    },\r\n    {\r\n      id: 1,\r\n      name: 'Dhanasekaran Witherspoon',\r\n      image: '/assets/images/alberto.png',\r\n      designation: 'Chief Food Officer',\r\n      abbr: 'CFO',\r\n        featured: false,\r\n      description: 'Our CFO, Danny, as he is affectionately referred to by his colleagues, comes from a long established family tradition in farming and produce. His experiences growing up on a farm in the Australian outback gave him great appreciation for varieties of food sources. As he puts it in his own words, Everything that runs, wins, and everything that stays, pays!'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Agumbe Tang',\r\n      image: '/assets/images/alberto.png',\r\n      designation: 'Chief Taste Officer',\r\n      abbr: 'CTO',\r\n        featured: false,\r\n      description: 'Blessed with the most discerning gustatory sense, Agumbe, our CFO, personally ensures that every dish that we serve meets his exacting tastes. Our chefs dread the tongue lashing that ensues if their dish does not meet his exacting standards. He lives by his motto, You click only if you survive my lick.'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Alberto Somayya',\r\n      image: '/assets/images/alberto.png',\r\n      designation: 'Executive Chef',\r\n      abbr: 'EC',\r\n      featured: true,\r\n      description: 'Award winning three-star Michelin chef with wide International experience having worked closely with whos-who in the culinary world, he specializes in creating mouthwatering Indo-Italian fusion experiences. He says, Put together the cuisines from the two craziest cultures, and you get a winning hit! Amma Mia!'\r\n    }\r\n  ];","import { LEADERS } from '../shared/leaders';\r\n\r\nexport const Leaders = (state = LEADERS, action) => {\r\n    switch(action.type){\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Navbar,NavbarBrand } from 'reactstrap';\n//import Menu from './components/MenuComponent';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\n//import { DISHES } from './shared/dishes';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\n\n//Week 3.3\n\n//here I have called for a store.\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n\n\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            < Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\n\nexport default App;\n","//this file content need not nessasarily made in a separate file , it could have even been a part of reducer.js file.\r\n\r\n//WEEK 3.3\r\n/*\r\nimport { createStore } from 'redux';\r\nimport { initialState, Reducer } from './reducer';\r\n\r\n//this function creates a store and returns it.\r\nexport const ConfigureStore = () => {\r\n    //this is the function which creates a store. It takes in 2 parameters .) reducer and the .)initial-state\r\n    const store = createStore(\r\n        Reducer,\r\n        initialState\r\n    );\r\n    return store;\r\n};\r\n*/\r\n\r\n//WEEK 4.1\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Promotions } from './promotions';\r\nimport { Comments } from './comments';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\n//now we create the store by combinig reducers , and we combine them with the help of an inbuilt function.\r\n//we do not give the initial state in here now, but we rather give the default value to all the reducers while defining them.\r\n\r\n//NOTE : REMEMBER THAT WHEN WE ARE MAKING THE REDUCER BY INTEGRATING THE DIFFERENT SMALL REDUCERS, IN EACH REDUCER\r\n//  \t WE GIVE THE STATE VARAIBLE A DEFAULT VALUE, WHICH IS THE VALUE OF THE FILE IMPORTED. BUT DO NOT THINK THAT\r\n//       EVERY TIME WE RUN THE REDUCER, BY THE DISPATCHER, THE REDUCER WILL TAKE THE DEFAULT VALUE, \r\n//       AS FROM THE SECOND TIME ITSELF, THE REDUCER WILL TAKE THE PREVIOUSLY RETURNED STATE AS THE VALUE OF THE STATE \r\n//       VARIABLE. IE INITIALLY WHEN WE RUN THE APPLICATION, THE REDUCERS TAKE THE GIVEN DEFAULT VALUE FOR THE STATE\r\n//       , MAKE MODIFICATIONS AND RETURN IT, BUT NOW WHEN WE DISPATCH AN ACTION THEN THE REDUCER TAKE THE STATE VALUE AS\r\n//       THE ONE WHICH IT RETURNED THE LAST TIME WHEN IT WAS RUN, IE THE CURRENT STATE IS TAKEN AS INPUT(NOT THE DEFAULT VALUE)\r\n//       AND CHANGES ARE MADE TO IT AS PER THE ACTION. AND NOW NEXT TIME THIS ALTERED STATE BECOMES THE INITIAL STATE.\r\n\r\n\r\n//here all the sub-reducers ,ie Dishes,Leader,etc , return different part of the state ie for all of them state is a different part and they\r\n//all retun the updated version of their part of the state, so here we combine the return value of all of the sub-reducers, and make the \r\n//combined state. This combined state is the integrated version of all the states, so we make the combined state as an object which has properties\r\n//whose value is equal to the individual sub-state,  ie here 'dishes' property holds the sub-state returned by 'Dishes' sub-reducer\r\n//, the 'leader' propery holds the sub-state returned by 'Leaders' sub-reducer.\r\n//so in the final state which we send to the main component, there we can retrieve the values of these sub-states by the use of these property names.\r\n\r\n//Therefor in the main component in the MapStateToProps function , we get the dishes by mentioning : 'state.dishes',  this dishes is the\r\n//name of the property here.\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes : Dishes,\r\n            leaders : Leaders,\r\n            promotions : Promotions,\r\n            comments : Comments\r\n        })\r\n    );\r\n    return store;\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import 'font-awesome/css/font-awesome.min.css';\n//import 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}